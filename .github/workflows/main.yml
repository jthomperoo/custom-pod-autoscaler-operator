name: main
on: 
  push:
  pull_request:
  release:
    types: [created]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go

    - name: Get build dependencies
      run: |
        # operator-sdk
        RELEASE_VERSION=v0.10.0
        curl -LO https://github.com/operator-framework/operator-sdk/releases/download/${RELEASE_VERSION}/operator-sdk-${RELEASE_VERSION}-x86_64-linux-gnu
        chmod +x operator-sdk-${RELEASE_VERSION}-x86_64-linux-gnu
        sudo cp operator-sdk-${RELEASE_VERSION}-x86_64-linux-gnu /bin/operator-sdk 
        rm operator-sdk-${RELEASE_VERSION}-x86_64-linux-gnu

    - name: Check out code into the Go module directory
      uses: actions/checkout@v1
    
    - name: Get dependencies
      run: go get -v -t -d ./...

    - name: Lint 
      run: |
        export PATH=$PATH:$(go env GOPATH)/bin
        GO111MODULE=off go get -u golang.org/x/lint/golint
        make lint

    - name: Version
      id: version
      run: |
        if [ ${{ github.event_name }} == "release" ]; then
          # github.ref is in the form refs/tags/VERSION, so apply regex to just get version
          VERSION=$(echo "${{ github.ref }}" | grep -P '([^\/]+$)' -o) 
        else
          VERSION=$(git rev-parse --short ${{ github.sha }})
        fi
        # Output the version determined from this step, retrieved later as steps.version.outputs.version
        echo "::set-output name=version::${VERSION}"

    - name: Build
      run: make VERSION=${{ steps.version.outputs.version }}

    - name: Deploy
      env:
        DOCKER_USER: ${{ secrets.DOCKER_USER }}
        DOCKER_PASS: ${{ secrets.DOCKER_PASS }}
      if: github.event_name != 'pull_request' && github.repository == 'jthomperoo/custom-pod-autoscaler-operator'
      run: |
        VERSION=${{ steps.version.outputs.version }}
        echo "$DOCKER_PASS" | docker login --username=$DOCKER_USER --password-stdin
        docker push custompodautoscaler/operator:${VERSION}
        if [ ${{ github.event_name }} == "release" ]; then
          docker tag custompodautoscaler/operator:${VERSION} custompodautoscaler/operator:latest
          docker push custompodautoscaler/operator:latest
        fi

    - name: Bundle YAML config
      if: github.event_name == 'release' && github.repository == 'jthomperoo/custom-pod-autoscaler-operator'
      run: |
        mkdir dist dist/cluster dist/namespace

        # Copy cluster/namespace scope config
        cp -r deploy/cluster/* deploy/crds/* dist/cluster
        cp -r deploy/namespace/* deploy/crds/* dist/namespace

        # Substitute in variaibles
        for f in $(find dist/ -name \*.yaml -print); do
          envsubst < ${f} > ${f}
        done

        tar -czvf cluster.tar.gz dist/cluster/*
        tar -czvf namespace.tar.gz dist/namespace/*

    - name: Deploy cluster-scope YAML
      if: github.event_name == 'release' && github.repository == 'jthomperoo/custom-pod-autoscaler-operator'
      uses: actions/upload-release-asset@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: https://uploads.github.com/repos/jthomperoo/custom-pod-autoscaler-operator/releases/${{ steps.version.outputs.version }}/assets{?name,label}
        asset_path: cluster.tar.gz
        asset_name: cluster.tar.gz
        asset_content_type: application/gzip

    - name: Deploy cluster-scope YAML
      if: github.event_name == 'release' && github.repository == 'jthomperoo/custom-pod-autoscaler-operator'
      uses: actions/upload-release-asset@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: https://uploads.github.com/repos/jthomperoo/custom-pod-autoscaler-operator/releases/${{ steps.version.outputs.version }}/assets{?name,label}
        asset_path: namespace.tar.gz
        asset_name: namespace.tar.gz
        asset_content_type: application/gzip